@page "/inicio/overview/{id?}"
@using global::Services.Gestion
@using Microsoft.AspNetCore.WebUtilities
@using BlazorFrontend.Pages.Gestiones
@using BlazorFrontend.Pages.Gestiones.Editar
@using Microsoft.AspNetCore.Components
@using DialogOptions = MudBlazor.DialogOptions
@using Size = MudBlazor.Size
@using System.Runtime.InteropServices.JavaScript
@using System.Globalization
@inject GestionServices GestionServices
@inject NavigationManager NavigationManager
@layout DashboardLayout
@inject IDialogService DialogService

<h3>Lista de gestiones activas</h3>
<MudDataGrid T="GestionDto" Items="@_gestiones.Take(2)" EditMode="DataGridEditMode.Form" StartedEditingItem="@StartEditingItem" EditTrigger="DataGridEditTrigger.Manual" Bordered="true">
    <Columns>
        <PropertyColumn Property="@(i => i.Nombre)"/>
        <PropertyColumn Property="@(i => i.FechaInicio)" Title="Fecha de inicio"/>
        <PropertyColumn Property="@(i => i.FechaFin)" Title="Fecha de cierre"/>
        <PropertyColumn Property="@(i => i.Estado)"/>
        <TemplateColumn CellClass="d-flex justify-end">
            <CellTemplate>
                <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="@context.Actions.StartEditingItem"/>
                <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Delete"/>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>


<MudFab Class="ma-4" Color="Color.Success" StartIcon="@Icons.Material.Filled.Add"
        @onclick="@ShowMudCrearGestionModal" Label="Agregar Gestion"/>

@code {
    private IEnumerable<GestionDto> _gestiones = new List<GestionDto>();

    private List<string> _events = new();

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var uri = new Uri(NavigationManager.Uri);
            var query = QueryHelpers.ParseQuery(uri.Query);
            if (query.TryGetValue("id", out var idValue))
            {
                Id = int.Parse(idValue!);
                _gestiones = await GestionServices.GetGestionAsync(Id);
                StateHasChanged();
            }
            else
            {
                throw new KeyNotFoundException("The 'id' parameter was not found in the query string.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred while initializing the component: {ex}");
        }
    }

    // TODO implement delete option

    private void ShowMudCrearGestionModal()
    {
        var options = new DialogOptions
        {
            CloseOnEscapeKey = true,
            MaxWidth = MaxWidth.Small,
            FullWidth = true,
            DisableBackdropClick = true
        };
        var parameters = new DialogParameters
        {
            { "Id", Id }
        };
        DialogService.ShowAsync<CrearGestion>("Llene los datos de la gestion",
            parameters, options);
    }

    private void StartEditingItem(GestionDto element)
    {
        var optionsEditarModal = new DialogOptions
        {
            CloseOnEscapeKey = true,
            MaxWidth = MaxWidth.Small,
            FullWidth = true,
            DisableBackdropClick = true
        };

        var parameters = new DialogParameters
        {
            { "SelectedGestionId", element.IdGestion }
        };
        DialogService.ShowAsync<EditarGestion>
            ("Edite los campos deseados", parameters, optionsEditarModal);
    }

}