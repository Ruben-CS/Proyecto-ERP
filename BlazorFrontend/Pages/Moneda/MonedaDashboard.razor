@page "/inicio/configuracion/monedaDashboard/{idempresa:int}"
@using global::Services.EmpresaMoneda
@using global::Services.Moneda
@layout MonedaDashBoardLayout
@inject NavigationManager NavigationManager
@inject EmpresaMonedaService EmpresaMonedaService
@inject MonedaService MonedaService

<MudLayout>
    <MudMainContent>
        <MudAppBar Elevation="5" Dense="false">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit"
                           Edge="Edge.Start"
                           OnClick="@ToggleDrawer"/>
            <MudSpacer/>
            <MudIconButton Icon="@Icons.Custom.Brands.GitHub"
                           Color="Color.Inherit"
                           Link="https://github.com/MudBlazor/MudBlazor"
                           Target="_blank"/>
        </MudAppBar>

        <MudDrawer @bind-Open="@_open"
                   ClipMode="DrawerClipMode.Docked"
                   Elevation="1"
                   Variant="@DrawerVariant.Responsive"
                   PreserveOpenState="true"
                   Breakpoint="Breakpoint.Md"
                   OpenMiniOnHover="true">
            <MudNavMenu>
                <MudNavGroup Icon="@Icons.Material.Filled.Business"
                             Title="Contabilidad"
                             @bind-Expanded=IsExpanded>

                    <MudNavLink Icon="@Icons.Material.Filled.CalendarMonth"
                                OnClick="NavigateToGestiones">
                        Gestiones
                    </MudNavLink>

                    <MudNavLink Icon="@Icons.Material.Filled.AccountBalance"
                                OnClick="NavigateToCuentas">
                        Plan de Cuentas
                    </MudNavLink>

                    <MudNavLink Icon="@Icons.Material.Filled.SwapHorizontalCircle"
                                OnClick="CambiarEmpresa">
                        Cambiar empresa
                    </MudNavLink>
                </MudNavGroup>
                <MudNavGroup Icon="@Icons.Material.Filled.Settings"
                             Title="Configuracion">
                    <MudNavLink Icon="@Icons.Material.Filled.CurrencyExchange"
                                OnClick="NavigateToMonedas">
                        Monedas
                    </MudNavLink>
                </MudNavGroup>
            </MudNavMenu>
        </MudDrawer>

        <MudTable Items="@_empresaMonedas"
                  Hover="true"
                  Breakpoint="Breakpoint.Sm"
                  Bordered="true"
                  Striped="true">
            <HeaderContent>
                <MudTh>Fecha y hora</MudTh>
                <MudTh>Moneda Principal</MudTh>
                <MudTh>Moneda Alternativa</MudTh>
                <MudTh>Cambio</MudTh>
                <MudTh>Estado</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="FechaRegistro">@context.FechaRegistro</MudTd>
                <MudTd DataLabel="MonedaPrincipal">@context.MonedaPrincipal</MudTd>
                <MudTd DataLabel="MonedaAlternativa">@context.MonedaAlternativa</MudTd>
                <MudTd DataLabel="Cambio">@context.Cambio</MudTd>
                <MudTd DataLabel="Estado">@context.Estado</MudTd>
            </RowTemplate>
        </MudTable>
    </MudMainContent>
</MudLayout>

@code {

    [Parameter]
    public int IdEmpresa { get; set; }

    private List<EmpresaMonedaDto> _empresaMonedas = new();

    private List<MonedaDto> _monedas = new();

    private bool IsExpanded { get; set; }

    private bool _open;

    private void ToggleDrawer() => _open = !_open;

    private void CambiarEmpresa() => NavigationManager.NavigateTo("/inicio");

    private void NavigateToCuentas()
    {
        if (IdEmpresa is 0) return;
        var uri = $"/plandecuentas/overview/{IdEmpresa}";
        NavigationManager.NavigateTo(uri);
    }

    private void NavigateToGestiones()
    {
        if (IdEmpresa is 0) return;
        var uri = $"/gestion/overview/{IdEmpresa}";
        NavigationManager.NavigateTo(uri);
    }

    private void NavigateToMonedas()
    {
        if (IdEmpresa is 0) return;
        var uri = $"/inicio/configuracion/monedaDashboard/{IdEmpresa}";
        NavigationManager.NavigateTo(uri);
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var uri = new Uri(NavigationManager.Uri);
            var segments = uri.Segments;
            var idValue = segments[^1];
            if (!string.IsNullOrEmpty(idValue) && int.TryParse(idValue, out _))
            {
                IdEmpresa = int.Parse(idValue);
                _empresaMonedas = await EmpresaMonedaService.GetEmpresasMonedaAsync(IdEmpresa);
                _monedas = (await MonedaService.GetMonedasAsync())!;
                await InvokeAsync(StateHasChanged);
            }
            else
            {
                throw new KeyNotFoundException(
                    "The 'id' parameter was not found in the query string.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(
                $"An error occurred while initializing the component: {ex}");
        }
    }

}