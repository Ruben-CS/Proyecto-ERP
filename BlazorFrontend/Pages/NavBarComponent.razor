@using BlazorFrontend.Services
@inject NavigationManager NavigationManager
@inject EmpresaService EmpresaService
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<MudAppBar Elevation="4" Dense="false">
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit"
                   Edge="Edge.Start"
                   OnClick="@ToggleDrawer"/>
    <MudSpacer/>
    <MudMenu Icon="@Icons.Material.Rounded.AccountCircle"
             Color="Color.Inherit"
             Size="Size.Large"
             Edge="Edge.End"
             AnchorOrigin="Origin.BottomLeft"
             TransformOrigin="Origin.TopRight"
             Style="border-radius: 15px;">
        <MudText Typo="Typo.subtitle2"
                 Align="Align.Center"
                 GutterBottom="true">
            @Username
        </MudText>
        <MudDivider DividerType="DividerType.Middle"
                    Light="false"
                    Style="border-top-width: 3px;"
                    Class="mb-2"/>
        <MudMenuItem OnClick="CerrarSesion">
            <MudText>
                <MudIcon Icon="@Icons.Material.Filled.Logout"
                         Color="Color.Default"/>
                Cerrar Sesion
            </MudText>
        </MudMenuItem>
        <MudMenuItem OnClick="CambiarEmpresa">
            <MudText>
                <MudIcon Icon="@Icons.Material.Filled.SwapHorizontalCircle"
                         Color="Color.Default"/>
                Cambiar Empresa
            </MudText>
        </MudMenuItem>
    </MudMenu>
</MudAppBar>

<MudDrawer @bind-Open="@_open"
           ClipMode="DrawerClipMode.Docked"
           Elevation="2"
           Variant="@DrawerVariant.Responsive"
           PreserveOpenState="true"
           Breakpoint="Breakpoint.Md"
           OpenMiniOnHover="true"
           Style="border-bottom-right-radius: 10px; border-top-right-radius: 10px">
    <MudDrawerHeader>
        <MudStack Row="true" Justify="Justify.Center" Spacing="1">
            <MudAvatar Color="Color.Secondary"
                       Elevation="1">
                @GetInitials(NombreEmpresa!)
            </MudAvatar>
            <MudText Typo="@Typo.h6"
                     Class="ml-5"
                     Align="Align.Center"
                     Style="margin-top: 5px;">
                @NombreEmpresa
            </MudText>
        </MudStack>
    </MudDrawerHeader>
    <MudDivider DividerType="DividerType.Middle" Light="false"
                Style="border-top-width: 3px;" Class="my-1"/>
    <MudNavMenu Rounded="true"
                Color="Color.Tertiary"
                Bordered="true">

        <MudNavGroup Icon="@Icons.Material.Rounded.Business"
                     Title="Contabilidad"
                     Expanded="true">

            <MudNavLink Icon="@Icons.Material.Rounded.AccountBalance"
                        Href="@NavigateToCuentas()"
                        Match="NavLinkMatch.Prefix">
                <MudText>
                    Plan de Cuentas
                </MudText>
            </MudNavLink>

            <MudNavLink Href="@NavigateToComprobantes()"
                        Icon="@Icons.Material.Rounded.ReceiptLong"
                        Match="NavLinkMatch.Prefix">
                <MudText>
                    Comprobantes
                </MudText>
            </MudNavLink>


        </MudNavGroup>
    </MudNavMenu>

    <MudDivider DividerType="DividerType.Middle"
                Light="false"
                Style="border-top-width: 3px;"
                Class="my-1"/>


    <MudNavMenu Color="Color.Default"
                Bordered="true"
                Rounded="true">
        <MudNavGroup Icon="@Icons.Material.Rounded.Inventory"
                     Title="Inventario"
                     Expanded="true">

            <MudNavLink Href="@NavigateToCategorias()"
                        Icon="@Icons.Material.Rounded.Category"
                        Match="NavLinkMatch.Prefix">
                <MudText>
                    Categorias
                </MudText>
            </MudNavLink>

            <MudNavLink Href="@NavigateToArticulo()"
                        Icon="@Icons.Material.Rounded.LocalMall"
                        Match="NavLinkMatch.Prefix">
                <MudText>
                    Articulos
                </MudText>
            </MudNavLink>

            <MudNavLink Icon="@Icons.Material.Rounded.Notes"
                        Match="NavLinkMatch.All"
                        Href="@NavigateToCompras()">
                <MudText>
                    Nota de compras
                </MudText>
            </MudNavLink>
            <MudNavLink Icon="@Icons.Material.Rounded.PointOfSale"
                        Match="NavLinkMatch.All"
                        Href="@NavigateToVentas()">
                <MudText>
                    Nota de ventas
                </MudText>
            </MudNavLink>
        </MudNavGroup>
    </MudNavMenu>

    <MudDivider DividerType="DividerType.Middle"
                Light="false"
                Style="border-top-width: 3px;"
                Class="my-1"/>

    <MudNavMenu Color="Color.Info"
                Bordered="true"
                Rounded="true">
        <MudNavGroup Icon="@Icons.Material.Rounded.SettingsApplications"
                     Title="Configuracion"
                     Expanded="true">


            <MudNavLink Href="@NavigateToMonedas()"
                        Icon="@Icons.Material.Rounded.CurrencyExchange"
                        Match="NavLinkMatch.Prefix">
                <MudText>
                    Monedas
                </MudText>
            </MudNavLink>

            <MudNavLink Href="@NavigateToGestiones()"
                        Icon="@Icons.Material.Rounded.CalendarMonth"
                        Match="NavLinkMatch.Prefix">
                <MudText>
                    Gestiones
                </MudText>
            </MudNavLink>

            <MudNavLink Href="@NavitgateToIntegCuentas()"
                        Icon="@Icons.Material.Rounded.AccountTree"
                        Match="NavLinkMatch.Prefix">
                <MudTooltip Text="Integracion de cuentas"
                            ShowOnClick="false"
                            ShowOnFocus="false">
                    <MudText>
                        Integracion
                    </MudText>
                </MudTooltip>
            </MudNavLink>
        </MudNavGroup>
    </MudNavMenu>
</MudDrawer>
<MudDrawer
    @bind-Open="IsOpen"
    Fixed="true"
    Elevation="2"
    Variant="@DrawerVariant.Mini"
    OpenMiniOnHover="true"
    Anchor="Anchor.End"
    ClipMode="DrawerClipMode.Docked"
    Breakpoint="Breakpoint.Lg"
    PreserveOpenState="true"
    Style="border-bottom-right-radius: 10px; border-top-right-radius: 10px">
    <MudNavMenu Bordered="true"
                Rounded="true"
                Color="Color.Primary">
        @if (IsOpen)
        {
            <MudDrawerHeader>
                <MudText Typo="Typo.h6">Reportes</MudText>
            </MudDrawerHeader>
        }

        <MudNavLink Match="NavLinkMatch.All"
                    Icon="@Icons.Material.Rounded.AutoStories"
                    OnClick="NavigateToLibro">
            <MudText>Libro Diario</MudText>
        </MudNavLink>
        <MudDivider DividerType="DividerType.Middle"
                    Light="false"
                    Style="border-top-width: 3px;"
                    Class="my-1"/>
        <MudNavLink Match="NavLinkMatch.All"
                    Icon="@Icons.Material.Rounded.PriceCheck"
                    OnClick="() => NavigateToSaldo()">
            <MudText>Suma y Saldo</MudText>
        </MudNavLink>
        <MudDivider DividerType="DividerType.Middle"
                    Light="false"
                    Style="border-top-width: 3px;"
                    Class="my-1"/>
        <MudNavLink Match="NavLinkMatch.All"
                    Icon="@Icons.Material.Rounded.Inventory2"
                    OnClick="() => NavigateToStock()">
            <MudText>Inventario</MudText>
        </MudNavLink>
        <MudDivider DividerType="DividerType.Middle"
                    Light="false"
                    Style="border-top-width: 3px;"
                    Class="my-1"/>
        <MudNavLink Match="NavLinkMatch.All"
                    Icon="@Icons.Material.Rounded.MenuBook"
                    OnClick="() => NavigateToLibroMayot()">
            <MudText>Libro Mayor</MudText>
        </MudNavLink>
        <MudDivider DividerType="DividerType.Middle"
                    Light="false"
                    Style="border-top-width: 3px;"
                    Class="my-1"/>
        <MudNavLink Match="NavLinkMatch.All"
                    Icon="@Icons.Material.Rounded.BarChart"
                    OnClick="NavigateToEstado">
            <MudText> Estado de Resultados</MudText>
        </MudNavLink>
        <MudNavLink Match="NavLinkMatch.All"
                    Icon="@Icons.Material.Rounded.Balance"
                    OnClick="NavigateToBalanceGeneral">
            <MudText>Balance General</MudText>
        </MudNavLink>
        <MudDivider DividerType="DividerType.Middle"
                    Light="false"
                    Style="border-top-width: 3px;"
                    Class="my-1"/>
    </MudNavMenu>
</MudDrawer>
@if (IsLoggingOut)
{
    <MudOverlay Visible="IsLoggingOut" DarkBackground="true" Absolute="false" ZIndex="9999">
        <MudProgressCircular Color="Color.Info" Indeterminate="true" Size="Size.Large"/>
    </MudOverlay>
}

<style>
    .fixed-width-text {
      width: 160px;
    }

</style>

@code {

    [Parameter]
    public int IdEmpresa { get; set; }

    private string? NombreEmpresa { get; set; }

    private bool IsLoggingOut { get; set; }

    private string? Username { get; set; }

    public bool IsOpen { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var empresa = await EmpresaService.GetEmpresaByIdAsync(IdEmpresa);
        NombreEmpresa = empresa!.Nombre;
        await InvokeAsync(StateHasChanged);
    }

    private bool _open = true;
    private void ToggleDrawer() => _open = !_open;
    private void CambiarEmpresa() => NavigationManager.NavigateTo("/inicio");

    private string GetInitials(string nombreEmpresa)
    {
        if (string.IsNullOrWhiteSpace(nombreEmpresa))
        {
            return string.Empty;
        }
        var words = nombreEmpresa.Split(' ');
        return words.Length == 1
            ? words[0][0].ToString().ToUpper()
            : string.Concat(words[0][0], words[1][0]).ToUpper();
    }

    private string NavigateToCuentas() => $"/plandecuentas/overview/{IdEmpresa}";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Username = await LocalStorage.GetItemAsync<string>("username");
            StateHasChanged();
        }
    }

    private void NavigateToSaldo() => NavigationManager.NavigateTo($"/SumaSaldo/{IdEmpresa}");

    private void NavigateToLibro() => NavigationManager.NavigateTo($"/LibroDiario/{IdEmpresa}");

    private void NavigateToBalanceGeneral() => NavigationManager.NavigateTo($"/BalanceGeneral/{IdEmpresa}");


    private void NavigateToEstado() => NavigationManager.NavigateTo($"/EstadoResultado/{IdEmpresa}");

    private void NavigateToLibroMayot() => NavigationManager.NavigateTo($"/LibroMayor/{IdEmpresa}");

    private void NavigateToStock() => NavigationManager.NavigateTo($"/Stock/{IdEmpresa}");


    private string NavigateToGestiones() => $"/gestion/overview/{IdEmpresa}";

    private string NavigateToMonedas() => $"/inicio/configuracion/monedaDashboard/{IdEmpresa}";

    private string NavigateToComprobantes() => $"/comprobantes/overview/{IdEmpresa}";

    private string NavigateToCategorias() => $"/CategoriaOverview/{IdEmpresa}";

    private string NavigateToCompras() =>
        $"/notaCompraOverview/{IdEmpresa}";

    private string NavigateToVentas() =>
        $"/notaVentaOverview/{IdEmpresa}";

    private string NavigateToArticulo() => $"/articulo/{IdEmpresa}";

    private string NavitgateToIntegCuentas() => $"/integracionCuentas/{IdEmpresa}";

    private async Task CerrarSesion()
    {
        IsLoggingOut = true;
        await Task.Delay(2500);
        NavigationManager.NavigateTo("/");
        IsLoggingOut = false;
    }

}