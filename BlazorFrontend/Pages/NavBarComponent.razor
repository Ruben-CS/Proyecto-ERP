@using BlazorFrontend.Services
@inject NavigationManager NavigationManager
@inject EmpresaService EmpresaService
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<MudAppBar Elevation="5" Dense="false">
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit"
                   Edge="Edge.Start"
                   OnClick="@ToggleDrawer"/>
    <MudSpacer/>
    <MudMenu Icon="@Icons.Material.Filled.AccountCircle"
             Color="Color.Inherit"
             Size="Size.Large"
             Edge="Edge.End"
             AnchorOrigin="Origin.BottomLeft"
             TransformOrigin="Origin.TopRight">
        <MudText Typo="Typo.subtitle2" Align="Align.Center"
                 GutterBottom="true">
            @Username
        </MudText>
        <MudMenuItem IconSize="Size.Small"
                     IconColor="Color.Dark"
                     Icon="@Icons.Material.Filled.Logout"
                     OnClick="CerrarSesion">
            Cerrar Sesion
        </MudMenuItem>
    </MudMenu>
</MudAppBar>

<MudDrawer @bind-Open="@_open"
           ClipMode="DrawerClipMode.Docked"
           Elevation="2"
           Variant="@DrawerVariant.Responsive"
           PreserveOpenState="true"
           Breakpoint="Breakpoint.Md"
           OpenMiniOnHover="true"
           Style="border-bottom-right-radius: 10px; border-top-right-radius: 10px">
    <MudDrawerHeader>
        <MudStack Row="true" Justify="Justify.Center" Spacing="1">
            <MudAvatar Color="Color.Secondary"
                       Elevation="1">
                @GetInitials(NombreEmpresa)
            </MudAvatar>
            <MudText Typo="@Typo.h6"
                     Class="ml-5"
                     Align="Align.Center"
                     Style="margin-top: 5px;">
                @NombreEmpresa
            </MudText>
        </MudStack>
    </MudDrawerHeader>
    <MudDivider DividerType="DividerType.Middle" Light="false"
                Style="border-top-width: 3px;" Class="my-1"/>
    <MudNavMenu Rounded="true"
                Color="Color.Tertiary"
                Bordered="true">

        <MudNavGroup Icon="@Icons.Material.Filled.Business"
                     Title="Contabilidad"
                     Expanded="true">

            <MudNavLink Href="@NavigateToGestiones()"
                        Icon="@Icons.Material.Filled.CalendarMonth"
                        Match="NavLinkMatch.Prefix">
                <MudText>
                    Gestiones
                </MudText>
            </MudNavLink>

            <MudNavLink Icon="@Icons.Material.Filled.AccountBalance"
                        Href="@NavigateToCuentas()"
                        Match="NavLinkMatch.Prefix">
                <MudText>
                    Plan de Cuentas
                </MudText>
            </MudNavLink>

            <MudNavLink Href="@NavigateToComprobantes()"
                        Icon="@Icons.Material.Filled.ReceiptLong"
                        Match="NavLinkMatch.Prefix">
                <MudText>
                    Comprobantes
                </MudText>
            </MudNavLink>

            <MudNavLink Href="@CambiarEmpresa()"
                        Icon="@Icons.Material.Filled.SwapHorizontalCircle"
                        Match="NavLinkMatch.Prefix">
                <MudText>
                    Cambiar Empresa
                </MudText>
            </MudNavLink>
        </MudNavGroup>
    </MudNavMenu>

    <MudDivider DividerType="DividerType.Middle"
                Light="false"
                Style="border-top-width: 3px;"
                Class="my-1"/>

    <MudNavMenu Color="Color.Info"
                Bordered="true"
                Rounded="true">
        <MudNavGroup Icon="@Icons.Material.Filled.Settings"
                     Title="Configuracion"
                     Expanded="true">
            <MudNavLink Href="@NavigateToMonedas()"
                        Icon="@Icons.Material.Filled.CurrencyExchange"
                        Match="NavLinkMatch.Prefix">
                <MudText>
                    Monedas
                </MudText>
            </MudNavLink>

            <MudNavLink Href="@NavigateToCategorias()"
                                    Icon="@Icons.Material.Filled.Category"
                                    Match="NavLinkMatch.Prefix">
                            <MudText>
                                Categorias
                            </MudText>
                        </MudNavLink>
        </MudNavGroup>
    </MudNavMenu>
</MudDrawer>

@if (IsLoggingOut)
{
    <MudOverlay Visible="IsLoggingOut" DarkBackground="true" Absolute="false" ZIndex="9999">
        <MudProgressCircular Color="Color.Info" Indeterminate="true" Size="Size.Large"/>
    </MudOverlay>
}


@code {

    [Parameter]
    public int IdEmpresa { get; set; }

    private string? NombreEmpresa { get; set; }

    private bool IsLoggingOut { get; set; }

    private string? Username { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var empresa = await EmpresaService.GetEmpresaByIdAsync(IdEmpresa);
        NombreEmpresa = empresa!.Nombre;
        await InvokeAsync(StateHasChanged);
    }

    private bool _open = true;
    private void ToggleDrawer() => _open = !_open;
    private string CambiarEmpresa() => "/inicio";

    private string GetInitials(string nombreEmpresa)
    {
        if (string.IsNullOrWhiteSpace(nombreEmpresa))
        {
            return string.Empty;
        }
        var words = nombreEmpresa.Split(' ');
        return words.Length == 1 ? words[0][0].ToString().ToUpper() : string.Concat(words[0][0], words[1][0]).ToUpper();
    }

    private string NavigateToCuentas() => $"/plandecuentas/overview/{IdEmpresa}";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Username = await LocalStorage.GetItemAsync<string>("username");
            StateHasChanged();
        }
    }

    private string NavigateToGestiones() => $"/gestion/overview/{IdEmpresa}";

    private string NavigateToMonedas() => $"/inicio/configuracion/monedaDashboard/{IdEmpresa}";

    private string NavigateToComprobantes() => $"/comprobantes/overview/{IdEmpresa}";

    private string NavigateToCategorias() => $"/CategoriaOverview/{IdEmpresa}";

    private async Task CerrarSesion()
    {
        IsLoggingOut = true;
        await Task.Delay(2500);
        NavigationManager.NavigateTo("/");
        IsLoggingOut = false;
    }

}