@inject ISnackbar Snackbar
@inject HttpClient HttpClient

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.DeleteForever" Class="mr-3 mb-n1"/>
            Desea eliminar este periodo?
        </MudText>
    </TitleContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled"
                   Color="Color.Dark"
                   OnClick="Cancel">Cancelar</MudButton>
        <MudButton Variant="Variant.Filled"
                   Color="Color.Error"
                   OnClick="CerrarPeriodo">Eliminar</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter]
    public EventCallback<PeriodoDto> OnPeriodoDataGridChange { get; set; }

    public PeriodoDto? PeriodoDto { get; set; }

    [Parameter]
    public int IdPeriodo { get; set; }

    private void Cancel() => MudDialog.Close();

    private async Task CerrarPeriodo()
    {
        var url = $"https://localhost:44378/periodos/eliminarperiodo/{IdPeriodo}";
        var response = await HttpClient.DeleteAsync(url);
        if (!response.IsSuccessStatusCode) return;
        Snackbar.Add("Periodo eliminado exitosamente", Severity.Success);
        await OnPeriodoDataGridChange.InvokeAsync(PeriodoDto);
        MudDialog.Close(DialogResult.Ok(response));
    }
}