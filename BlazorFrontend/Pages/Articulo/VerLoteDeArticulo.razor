@using Microsoft.IdentityModel.Tokens
@using Modelos.Models.Enums

<MudDialog Style="border-radius: 15px;">
    <DialogContent>
        @if (Lotes.IsNullOrEmpty())
        {
            <MudStack Justify="Justify.Center" Row="true"
                      AlignItems="AlignItems.Center">
                <MudIcon Icon="@Icons.Material.Rounded.Warning"
                         Color="Color.Warning"
                         Size="Size.Large"/>
                <MudText Typo="Typo.h4" Align="Align.Center">
                    No existen lotes para este articulo!
                </MudText>
            </MudStack>
        }
        else
        {
            <MudTable Items="Lotes"
                      Dense="true"
                      Striped="true"
                      Hover="true"
                      Bordered="true"
                      Elevation="0"
                      ReadOnly="true"
                      Style="border-radius: 15px;">
                <HeaderContent>
                    <MudTh>Nro Lote</MudTh>
                    <MudTh>Fecha Ingreso</MudTh>
                    <MudTh>Fecha Vencimiento</MudTh>
                    <MudTh>Cantidad</MudTh>
                    <MudTh>Stock</MudTh>
                    <MudTh>Estado</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Nro Lote">@context.NroLote</MudTd>
                    <MudTd DataLabel="Fecha Ingreso">@context.FechaIngreso.ToShortDateString()</MudTd>
                    <MudTd DataLabel="Fecha Vencimiento">
                        @if (context.FechaVencimiento != null)
                        {
                            @context.FechaVencimiento.Value.ToShortDateString()
                        }
                    </MudTd>
                    <MudTd DataLabel="Cantidad">@context.Cantidad</MudTd>
                    <MudTd DataLabel="Stock">@context.Stock</MudTd>
                    <MudTd Style="align-items: center">
                        @{
                            switch (context.EstadoLote)
                            {
                                case EstadoLote.Activo:
                                    <MudChip Color="Color.Success"
                                             Size="Size.Small"
                                             Variant="Variant.Text"
                                             Style="align-self: center">
                                        @context.EstadoLote
                                    </MudChip>
                                    break;
                                case EstadoLote.Anulado:
                                    <MudChip Color="Color.Error"
                                             Size="Size.Small"
                                             Variant="Variant.Text"
                                             Style="align-self: center">
                                        @context.EstadoLote
                                    </MudChip>
                                    break;
                                case EstadoLote.Agotado:
                                    <MudChip Color="Color.Dark"
                                             Size="Size.Small"
                                             Variant="Variant.Text"
                                             Style="align-self: center">
                                        @context.EstadoLote
                                    </MudChip>
                                    break;
                            }
                        }
                    </MudTd>
                </RowTemplate>
            </MudTable>
        }
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Text"
                   StartIcon="@Icons.Material.Filled.Cancel"
                   Color="Color.Dark"
                   OnClick="Cancel"
                   Size="Size.Medium"
                   Class="mb-2 rounded-pill">
            <MudText Typo="Typo.button">Cerrar</MudText>
        </MudButton>
    </DialogActions>
</MudDialog>

@code {

    [Parameter]
    public int IdArticulo { get; set; }

    [Parameter]
    public List<LoteDto>? Lotes { get; set; } = new();

    [CascadingParameter]
    private MudDialogInstance? MudDialog { get; set; }

    private void Cancel() => MudDialog!.Cancel();
}