@using NET7.BlazorServerApp.Services
@using Modelos.Models
@inject EmpresaService EmpresaService
@inject IDialogService DialogService
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient


<EditForm Model="@EmpresaDto" SelectedEmpresaId="@SelectedEmpresaId" OnValidSubmit="EditarEmpresa">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="row">
        <div class="col-md-6 mb-4">
            <div class="form-outline">
                <label>Nombre</label>
                <InputText @bind-Value="EmpresaDto.Nombre" class="form-control">@EmpresaDto.Nombre</InputText>
                <ValidationMessage For="@(() => EmpresaDto.Nombre)"/>
            </div>
        </div>
        <div class="col-md-6 mb-4">
            <div class="form-outline">
                <label>Nit</label>
                <InputText @bind-Value="EmpresaDto.Nit" class="form-control">@EmpresaDto.Nit</InputText>
                <ValidationMessage For="@(() => EmpresaDto.Nit)"/>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6 mb-4">
            <div class="form-outline">
                <label>Sigla</label>
                <InputText @bind-Value="EmpresaDto.Sigla" class="form-control">@EmpresaDto.Sigla</InputText>
                <ValidationMessage For="@(() => EmpresaDto.Sigla)"/>
            </div>
        </div>

        <div class="col-md-6 mb-4">
            <div class="form-outline">
                <label>Telefono</label>
                <InputText @bind-Value="EmpresaDto.Telefono" class="form-control">@EmpresaDto.Telefono</InputText>
                <ValidationMessage For="@(() => EmpresaDto.Telefono)"/>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6 mb-4">
            <div class="form-outline">
                <label>Direccion</label>
                <InputText @bind-Value="EmpresaDto.Direccion" class="form-control">@EmpresaDto.Direccion</InputText>
                <ValidationMessage For="@(() => EmpresaDto.Direccion)"/>
            </div>
        </div>
        <div class="col-md-6 md-4">
            <div class="form-outline">
                <label>Niveles</label>
                <InputSelect @bind-Value="EmpresaDto.Niveles" class="form-select" aria-label="Default select example">
                    @foreach (var item in _listaNiveles)
                    {
                        <option value="@item">@EmpresaDto.Niveles</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => EmpresaDto.Niveles)"/>
            </div>
        </div>
    </div>
    <label>Correo</label>
    <InputText @bind-Value="EmpresaDto.Correo" class="form-control">@EmpresaDto.Correo</InputText>
    <ValidationMessage For="@(() => EmpresaDto.Correo)"/>
</EditForm>
<FooterTemplate>
    <Button Color="ButtonColor.Primary" @onclick="EditarEmpresa">Guardar Cambios</Button>
</FooterTemplate>

@code {

    [Parameter]
    public int SelectedEmpresaId { get; set; }

    private readonly List<int> _listaNiveles = Enumerable.Range(3, 5).ToList();

    private EmpresaDto? EmpresaDto { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        if (EmpresaService != null && SelectedEmpresaId != 0)
        {
            EmpresaDto = await EmpresaService.GetEmpresaByIdAsync(SelectedEmpresaId);
        }
    }

    private async Task EditarEmpresa()
    {
        const string url = "https://localhost:44378/empresas";

        var editedEmpresa = new EmpresaDto
        {
            IdEmpresa = EmpresaDto.IdEmpresa,
            Nombre = EmpresaDto.Nombre,
            Nit = EmpresaDto.Nit,
            Sigla = EmpresaDto.Sigla,
            Telefono = EmpresaDto.Telefono,
            Correo = EmpresaDto.Correo,
            Direccion = EmpresaDto.Direccion,
            Niveles = EmpresaDto.Niveles,
            IsDeleted = EmpresaDto.IsDeleted,
            Gestiones = EmpresaDto.Gestiones,
            IdUsuario = 1,
            Usuario = EmpresaDto.Usuario
        };
        var response = await HttpClient.PutAsJsonAsync(url, editedEmpresa);

        if (response.IsSuccessStatusCode)
        {
            Console.WriteLine("Success");
            //todo mostrar toast de mensaje

        }

    }

}