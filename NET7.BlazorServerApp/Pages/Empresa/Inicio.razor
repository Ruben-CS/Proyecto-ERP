@page "/inicio"
@inject HttpClient HttpClient
@using ModuloContabilidadApi.Models.Dtos

<Modal @ref="_modal" Title="Crear Empresa" IsVerticallyCentered="true">
    <BodyTemplate>
        <_EmpresaUpsert ></_EmpresaUpsert>
    </BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Secondary" @onclick="OnHideModalClick">
            Close
        </Button>
        <Button Color="ButtonColor.Primary" type="submit">
            Save changes
        </Button>
    </FooterTemplate>
</Modal>


<div class="container-xxl border border-primary rounded d-flex justify-content-center">
    <div class="align-items-center mt-5">
        <div class="row">
            <div class="col-12">
                <h1>Inicio</h1>
                <p>Esta es la página de inicio</p>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <Button Color="ButtonColor.Primary" @onclick="OnShowModalClick">CrearEmpresa</Button>
            </div>
        </div>
    </div>
</div>

@code {
    private Modal _modal = null!;

        private const string EmpresaCrudUrl = "https://localhost:44378/empresas/agregarEmpresa";

    public EmpresaDto EmpresaDto { get; } = new();

    // public async Task CreateEmpresaAsync()
    // {
    //     var empresaDto = new EmpresaDto()
    //     {
    //         Nombre = EmpresaDto.Nombre,
    //         Nit = EmpresaDto.Nit,
    //         Sigla = EmpresaDto.Sigla,
    //         Correo = EmpresaDto.Correo,
    //         Niveles = EmpresaDto.Niveles
    //     };
    //     var response = await HttpClient.PostAsJsonAsync(EmpresaCrudUrl, empresaDto);
    //     response.EnsureSuccessStatusCode();
    //     if (response.IsSuccessStatusCode)
    //     {
    //         Console.WriteLine("empresa creada exitosamente");
    //     }
    // }

    private async Task OnShowModalClick()
    {
        await _modal.ShowAsync();
    }

    private async Task OnHideModalClick()
    {
        await _modal.HideAsync();
    }

}